{"version":3,"sources":["reducer.ts","Context.tsx","operations/EditPage.tsx","operations/AddElement.tsx","operations/ShowElement.tsx","operations/DeleteElement.tsx","operations/ChangeElement.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["reducer","state","action","type","payload","_elementContent","Error","globalProps","isPicEditShow","isTextEditShow","isDeleteShow","idstate","picvalue","txtvalue","initialPic","id","uuidv4","content","initialTxt","AppContext","createContext","dispatch","TopProvider","children","useReducer","JSON","parse","localStorage","getItem","Provider","value","EditPage","props","useContext","elementContent","useState","isModalShow","setIsModalShow","className","onClick","e","setItem","stringify","removeItem","title","centered","visible","onOk","onCancel","map","el","i","src","alt","AddElement","length","ShowElement","makeBorderShow","element","find","isBorderShow","hideBorderShow","getElement","style","border","onMouseEnter","onMouseLeave","picItem","newSate","editPic","txtItem","editTxt","display","onDragEnd","result","destination","newitems","list","startIndex","endIndex","Array","from","splice","removed","reorder","source","index","droppableId","provided","droppableProps","ref","innerRef","draggableId","draggableProps","dragHandleProps","DeleteElement","newElement","filter","forEach","ChangeElement","txtChange","target","onChange","defaultValue","inline","initialValue","init","height","language","plugins","toolbar","relative_urls","content_css","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7141d2b3.chunk.js","sourcesContent":["\n\n// all actions\nimport {IGlobalProps} from \"./Context\";\n\nconst reducer = (state:IGlobalProps, action:any)=>{\n    //(文本，图片)添加、编辑、改变(事件响应)，删除\n    switch (action.type) {\n        case 'updateElements':{\n            const {payload} = action;\n            return {...state,_elementContent: payload}\n        }\n        case 'addPic': {\n            const { payload } = action;\n            return {...state,_elementContent:[...state._elementContent,...payload]};\n        }\n        case 'addTxt':{\n            const { payload } = action; //list需要新加数据\n            return {...state,_elementContent:[...state._elementContent,...payload]};\n        }\n        case 'editPic':{ //改变数据\n            const { payload } = action;\n            return {...state,...payload};\n        }\n        case 'editTxt':{ //改变数据\n            const { payload } = action;\n            return {...state,...payload};\n        }\n        case 'txtChange':{ //改变数据\n            const { payload } = action;\n            return {...state,...payload};\n        };\n        case 'picChange':{ //改变数据\n            const { payload } = action;\n            return {...state,...payload};\n        };\n        case 'savePic':{ //改变数据\n            const { payload } = action;\n            return {...state,...payload};\n        };\n        case 'deleteEl':{ //改变数据\n            const { payload } = action;\n            return {...state,...payload};\n        }\n        case 'deleteAll':{ //改变数据\n            const { payload } = action;\n            return {...state,...payload};\n        }\n        case 'makeBorderShow': { //改变数据\n            const { payload } = action;\n            return {...state,...payload};\n        }\n        case 'hideBorderShow': { //改变数据\n            const { payload } = action;\n            return {...state,...payload};\n        }\n        default:\n            throw new Error();\n    }\n}\n\n\n\n\n\nexport default reducer","import React, { createContext, useReducer } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport reducer from './reducer';\n\n\nexport type ContentType = {\n    id: string,\n    type: string,\n    content: string,\n    isBorderShow?:boolean\n}\n\n export type IGlobalProps = {\n    _elementContent: ContentType[];\n    initialPic: ContentType;\n    initialTxt: ContentType;\n    isPicEditShow: boolean;\n    isTextEditShow: boolean;\n    isDeleteShow: boolean;\n    idstate: string;\n    picvalue: string;\n    txtvalue: string;\n}\n\n const globalProps={\n    _elementContent:[],\n    isPicEditShow:false,\n    isTextEditShow:false,\n    isDeleteShow:false,\n    idstate:'',\n    picvalue:'https://www.baidu.com/img/PCtm_d9c8750bed0b3c7d089fa7d55720d6cf.png',\n    txtvalue:'empty text',\n    initialPic:{\n        id:uuidv4(),\n        type:'pic',\n        content:'https://www.baidu.com/img/PCtm_d9c8750bed0b3c7d089fa7d55720d6cf.png'\n    },\n    initialTxt:{\n        id:uuidv4(),\n        type:'txt',\n        content:'empty text'\n    }\n}\n\n\nconst AppContext = createContext<{ state: IGlobalProps; dispatch: React.Dispatch<any>; }>({\n    state: globalProps,\n    dispatch: () => null\n});\n\nconst TopProvider: React.FC = ({ children }) => {\n    const [state, dispatch] = useReducer(reducer, {...globalProps,\n        _elementContent:((JSON.parse( localStorage.getItem('elementContent')|| '[]')||[]) as ContentType[])\n    });\n\n    return (\n        <AppContext.Provider value={{state, dispatch}}>\n            {children}\n        </AppContext.Provider>\n    )\n}\n\n\nexport { AppContext, TopProvider ,globalProps};\n\n","import React,{FormEvent,useContext,useState}  from 'react'\nimport { Modal } from 'antd';\n\nimport {AppContext, ContentType} from \"../Context\";\n\n\n\nconst EditPage:React.FC = (props) =>{\n    const { state: globalProps, dispatch } = useContext(AppContext);\n    const { _elementContent: elementContent } = globalProps;\n    const [isModalShow, setIsModalShow] = useState<boolean>(false);//模态框默认值\n\n    //预览所有元素\n    const preview = (e:FormEvent<HTMLButtonElement>) => {\n        setIsModalShow(true);\n    };\n\n    //保存所有元素\n    const saveAll = (e:FormEvent<HTMLButtonElement>) => {\n        localStorage.setItem('elementContent',JSON.stringify(elementContent));\n\n    };\n\n    //清空所有元素\n    const deleteAll = (e:FormEvent<HTMLButtonElement>) => {\n        localStorage.removeItem('elementContent');\n        const newSate ={\n            _elementContent:[],\n            isDeleteShow:false,\n            isTextEditShow:false,\n            isPicEditShow:false\n        }\n        dispatch({\n            type: 'deleteAll',\n            payload: newSate\n        })\n    };\n\n    return(\n        <div>\n            <h3>文档操作</h3>\n            <div className=\"btn-group\">\n                <button onClick={preview} className=\"btn btn-default\">预览</button>\n                <button onClick={saveAll} className=\"btn btn-default\">保存</button>\n                <button onClick={deleteAll} className=\"btn btn-default\">清空</button>\n            </div>\n            <Modal\n                title=\"预览内容\"\n                centered = {true}\n                visible={isModalShow}\n                onOk={() => {setIsModalShow(false); }}\n                onCancel={() => {setIsModalShow(false);}}\n            >\n                {\n                    elementContent.map((el:ContentType,i:number)=>{\n                        if(el.type ===\"pic\")\n                            return (<div key={el.id} ><img key={i} src={el.content} alt=\"loading error\" className='img-responsive'/></div>)\n                        else if\n                           (el.type ===\"txt\") return (<div key={el.id} ><p>{el.content}</p></div>)\n                    })\n                }\n            </Modal>\n        </div>\n    )\n}\n\n// @ts-ignore\nexport default EditPage","import React,{FormEvent,useContext} from 'react'\nimport { AppContext } from '../Context';\nimport { v4 as uuidv4 } from 'uuid';\n\n\nconst AddElement:React.FC= (props) =>{\n\n    const { state: globalProps, dispatch } = useContext(AppContext);\n\n    //加图片\n    const addPic = (e: FormEvent<HTMLButtonElement>) => {\n        if(globalProps._elementContent.length === 0 ){\n            dispatch({\n                type: 'addPic',\n                payload: [globalProps.initialPic]\n            })\n        }else{\n            dispatch({\n                type: 'addPic',\n                payload: [{\n                    id: uuidv4(),\n                    type:'pic',\n                    content:globalProps.initialPic.content\n                }]\n            })\n        }\n    };\n\n    //加文字\n    const addTxt = (e: FormEvent<HTMLButtonElement>) => {\n        if(globalProps._elementContent.length === 1){\n            dispatch({\n                type: 'addTxt',\n                payload: [globalProps.initialTxt]\n            })\n        }else{\n            dispatch({\n                type: 'addTxt',\n                payload: [{\n                    id: uuidv4(),\n                    type:'txt',\n                    content:globalProps.initialTxt.content\n                }]\n            })\n        }\n    };\n\n    return(\n        <div>\n            <h3>添加元素</h3>\n            <div className=\"btn-group\">\n                <button onClick={addPic} className=\"btn btn-default\">图片</button>\n                <button onClick={addTxt} className=\"btn btn-default\">文字</button>\n            </div>\n        </div>\n    )\n}\n\nexport default AddElement","import React, {FormEvent, useContext, MouseEvent} from 'react'\nimport {AppContext, ContentType} from '../Context';\nimport {DragDropContext, Droppable, Draggable} from \"react-beautiful-dnd\";\n\nconst ShowElement: React.FC<any> = (props) => {\n\n    const {state: globalProps, dispatch} = useContext(AppContext);\n    const {_elementContent: elementContent} = globalProps;\n\n    //重新排序函数\n    const reorder = (list: any, startIndex: number, endIndex: number) => {\n        const result: ContentType[] = Array.from(list);\n        const [removed] = result.splice(startIndex, 1);\n        result.splice(endIndex, 0, removed);\n        return result;\n    };\n\n\n    const onDragEnd = (result: any) => {\n        // dropped outside the list\n        if (!result.destination) {\n            return;\n        }\n\n        const newitems = reorder(\n            elementContent,\n            result.source.index,\n            result.destination.index\n        );\n        dispatch(\n            {\n                type: \"updateElements\",\n                payload: newitems\n            }\n        )\n        //\n    }\n    //文字编辑\n    const editTxt = (e: FormEvent<HTMLParagraphElement>, id: string) => {\n        const txtItem = elementContent.find(e => (e.id === id))\n        const newSate = {\n            isDeleteShow: true,\n            isTextEditShow: true,\n            isPicEditShow: false,\n            txtvalue: txtItem?.content,\n            idstate: id,\n        }\n        dispatch({\n            type: 'editTxt',\n            payload: newSate\n        })\n    };\n\n    //编辑图片\n    const editPic = (e: FormEvent<HTMLImageElement>, id: string) => {\n        const picItem = elementContent.find(e => e.id === id)\n        const newSate = {\n            isDeleteShow: true,\n            isPicEditShow: true,\n            isTextEditShow: false,\n            picvalue: picItem?.content,\n            idstate: id,\n        }\n        dispatch({\n            type: 'editPic',\n            payload: newSate\n        })\n    };\n\n    //showborder\n    const makeBorderShow = (e: MouseEvent<HTMLDivElement>, id: string) => {\n        const element = elementContent.find(e => e.id === id)\n        if (element)\n            element.isBorderShow = true\n        dispatch({\n            type: 'makeBorderShow',\n            payload: elementContent\n        })\n    };\n\n    //hideborder\n    const hideBorderShow = (e: MouseEvent<HTMLDivElement>, id: string) => {\n        const element = elementContent.find(e => e.id === id)\n        if (element)\n            element.isBorderShow = false\n        dispatch({\n            type: 'hideBorderShow',\n            payload: elementContent\n        })\n    };\n\n    const getElement = (el: ContentType) => {\n        if (el.type === \"pic\")\n            return (\n                <div key={el.id}\n                     style={{border: el.isBorderShow ? '1px solid' : ''}}\n                     onMouseEnter={(e) => {\n                         makeBorderShow(e, el.id)\n                     }}\n                     onMouseLeave={(e) => {\n                         hideBorderShow(e, el.id)\n                     }}>\n                    <img\n                        src={el.content}\n                        onClick={(e) => {\n                            editPic(e, el.id)\n                        }}\n                        alt=\"loading error\"\n                        className='img-responsive'/>\n                </div>)\n        else if (el.type === \"txt\")\n            return (\n                <div key={el.id}\n                     style={{border: el.isBorderShow ? '1px solid' : ''}}\n                     onMouseEnter={(e) => {\n                         makeBorderShow(e, el.id)\n                     }}\n                     onMouseLeave={(e) => {\n                         hideBorderShow(e, el.id)\n                     }}>\n                    <p onClick={(e) => {\n                        editTxt(e, el.id)\n                    }}>{el.content}</p>\n                </div>)\n    }\n\n    return (\n        <div className='col-xs-6 text-left' style={{border: '1px solid', display: 'block'}}>\n            <h3>简单编辑器</h3>\n            {\n                <DragDropContext onDragEnd={onDragEnd}>\n                    <Droppable droppableId=\"droppable\">\n                        {\n                            (provided: any) => (\n                                <div\n                                    {...provided.droppableProps}\n                                    ref={provided.innerRef}\n                                >\n                                    {\n\n                                        elementContent.map((el, index) => <Draggable key={el.id} draggableId={el.id}\n                                                                                     index={index}>\n                                                {\n                                                    (provided: any) => (\n                                                        <div\n                                                            ref={provided.innerRef}\n                                                            {...provided.draggableProps}\n                                                            {...provided.dragHandleProps}\n                                                        >\n                                                            {\n                                                                getElement(el)\n                                                            }\n                                                        </div>\n                                                    )\n                                                }\n\n                                            </Draggable>\n                                        )\n                                    }\n                                </div>\n                            )\n                        }\n                    </Droppable>\n                </DragDropContext>\n\n            }\n\n        </div>\n\n    )\n\n}\n\nexport default ShowElement;","import React,{FormEvent,useContext}  from 'react'\nimport { AppContext } from '../Context';\n\nconst DeleteElement:React.FC = (props) =>{\n    const { state: globalProps, dispatch } = useContext(AppContext);\n\n    //删除元素\n    const deleteEl = (e:FormEvent<HTMLButtonElement>) => {\n        let id = globalProps.idstate;\n        let newElement = globalProps._elementContent.filter(e => e.id !== id)\n        globalProps._elementContent.forEach(el => {\n            if(el.id === globalProps.idstate)\n                el.content = globalProps.txtvalue;\n        })\n        const newSate ={\n            _elementContent:newElement,\n            isDeleteShow:false,\n            isTextEditShow:false,\n            isPicEditShow:false\n        }\n        dispatch({\n            type: 'deleteEl',\n            payload: newSate\n        })\n    };\n\n    return(\n        <div style={{display: globalProps.isDeleteShow ? \"block\" : \"none\"}}  className=\"text-left\">\n            <button onClick={deleteEl} >删除</button>\n        </div>\n    )\n}\n\nexport default DeleteElement","import React, {FormEvent, useContext, ChangeEvent} from 'react'\nimport {AppContext} from '../Context';\nimport {Editor} from '@tinymce/tinymce-react';\n\n\nconst ChangeElement: React.FC= (props) => {\n    const {state: globalProps, dispatch} = useContext(AppContext);\n    const {_elementContent: elementContent} = globalProps;\n\n    //获取图片编辑框改动\n    const picChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\n        const newSate = {\n            picvalue: e.target.value\n        }\n        dispatch({\n            type: 'picChange',\n            payload: newSate\n        })\n    };\n\n    //修改图片按钮\n    const savePic = (e: FormEvent<HTMLButtonElement>) => {\n        elementContent.forEach(el => {\n            if (el.id === globalProps.idstate)\n                el.content = globalProps.picvalue;\n        })\n        dispatch({\n            type: 'savePic',\n            payload: elementContent\n        })\n    };\n\n    //获取文本编辑框改动\n    const txtChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\n        elementContent.forEach(el => {\n            if (el.id === globalProps.idstate)\n                el.content = globalProps.txtvalue;\n        })\n        const newSate = {\n            txtvalue: e.target.value,\n            _elementContent: elementContent\n        }\n        dispatch({\n            type: 'txtChange',\n            payload: newSate\n        })\n    };\n\n    return (\n        <div>\n            <div style={{display: globalProps.isPicEditShow ? \"block\" : \"none\"}}>\n                <h4>编辑</h4>\n                <textarea onChange={picChange} value={globalProps.picvalue}\n                          defaultValue={globalProps.initialPic.content}/>\n                <br/>\n                <button onClick={savePic} >修改图片</button>\n                {/*className=\"btn btn-default\"*/}\n            </div>\n            <div style={{display: globalProps.isTextEditShow ? \"block\" : \"none\"}}>\n                <Editor\n                    inline={false}\n                    initialValue={globalProps.txtvalue}\n                    onChange={() => txtChange}\n                    value={globalProps.txtvalue}\n                    init={{\n                        height: '400px',\n                        language: 'zh_CN',\n                        plugins: 'table lists link image',\n                        toolbar: 'formatselect | bold italic strikethrough forecolor backcolor | link image | alignleft aligncenter alignright alignjustify  | numlist bullist outdent indent',\n                        relative_urls: false,\n                        content_css: [\n                            '/codepen.min.css'\n                        ],\n                    }}\n                />\n                <textarea onChange={txtChange} value={globalProps.txtvalue} defaultValue={globalProps.txtvalue}/>\n            </div>\n        </div>\n    )\n}\n\nexport default ChangeElement","import React from 'react';\nimport './App.css';\nimport {TopProvider} from \"./Context\";\nimport EditPage from \"./operations/EditPage\";\nimport AddElement from \"./operations/AddElement\";\nimport ShowElement from \"./operations/ShowElement\";\nimport DeleteElement from \"./operations/DeleteElement\";\nimport ChangeElement from \"./operations/ChangeElement\";\n\nfunction App() {\n    return (\n        <TopProvider>\n            <div className=\"App\">\n                <div className=\"wrapper\">\n\n                    <div className=\"left\">\n                        <EditPage/>\n                        <AddElement/>\n                    </div>\n                    <div className=\"center\">\n                        <ShowElement/>\n                    </div>\n                    <div className=\"right\">\n                        <h3>元素操作</h3>\n                        <DeleteElement/>\n                        <ChangeElement/>\n                    </div>\n                </div>\n\n            </div>\n\n        </TopProvider>\n\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}